<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.xblog.mapper.CollectMapper">
  <resultMap id="BaseResultMap" type="com.example.xblog.domain.Collect">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="position_id" jdbcType="INTEGER" property="positionId" />
    <result column="collecttime" jdbcType="TIMESTAMP" property="collecttime" />
    <result column="collectdistime" jdbcType="TIMESTAMP" property="collectdistime" />
  </resultMap>
  <resultMap id="CollResultMap" type="com.example.xblog.resp.CollectResp">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="position_id" jdbcType="INTEGER" property="positionId" />
    <result column="posttionnames" jdbcType="VARCHAR" property="positionName" />
    <result column="salary" jdbcType="VARCHAR" property="positionSalary" />
    <result column="tags" jdbcType="ARRAY" property="tagList" />
    <result column="avatar" jdbcType="VARCHAR" property="employAvatar" />
    <result column="employname" jdbcType="VARCHAR" property="employName" />
    <result column="industryname" jdbcType="VARCHAR" property="industryName" />
    <result column="stage" jdbcType="VARCHAR" property="employStage" />
    <result column="collecttime" jdbcType="TIMESTAMP" property="collecttime" />

  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, student_id, position_id, collecttime, collectdistime
  </sql>
  <select id="selectByExample" parameterType="com.example.xblog.domain.CollectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from collect
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from collect
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from collect
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.xblog.domain.CollectExample">
    delete from collect
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.xblog.domain.Collect">
    insert into collect (id, student_id, position_id, 
      collecttime, collectdistime)
    values (#{id,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, #{positionId,jdbcType=INTEGER}, 
      #{collecttime,jdbcType=TIMESTAMP}, #{collectdistime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xblog.domain.Collect" useGeneratedKeys="true"
          keyColumn="id" keyProperty="id">
    insert into collect
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="positionId != null">
        position_id,
      </if>
      <if test="collecttime != null">
        collecttime,
      </if>
      <if test="collectdistime != null">
        collectdistime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="positionId != null">
        #{positionId,jdbcType=INTEGER},
      </if>
      <if test="collecttime != null">
        #{collecttime,jdbcType=TIMESTAMP},
      </if>
      <if test="collectdistime != null">
        #{collectdistime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.xblog.domain.CollectExample" resultType="java.lang.Long">
    select count(*) from collect
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update collect
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=INTEGER},
      </if>
      <if test="row.studentId != null">
        student_id = #{row.studentId,jdbcType=INTEGER},
      </if>
      <if test="row.positionId != null">
        position_id = #{row.positionId,jdbcType=INTEGER},
      </if>
      <if test="row.collecttime != null">
        collecttime = #{row.collecttime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.collectdistime != null">
        collectdistime = #{row.collectdistime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update collect
    set id = #{row.id,jdbcType=INTEGER},
      student_id = #{row.studentId,jdbcType=INTEGER},
      position_id = #{row.positionId,jdbcType=INTEGER},
      collecttime = #{row.collecttime,jdbcType=TIMESTAMP},
      collectdistime = #{row.collectdistime,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xblog.domain.Collect">
    update collect
    <set>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="positionId != null">
        position_id = #{positionId,jdbcType=INTEGER},
      </if>
      <if test="collecttime != null">
        collecttime = #{collecttime,jdbcType=TIMESTAMP},
      </if>
      <if test="collectdistime != null">
        collectdistime = #{collectdistime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xblog.domain.Collect">
    update collect
    set student_id = #{studentId,jdbcType=INTEGER},
      position_id = #{positionId,jdbcType=INTEGER},
      collecttime = #{collecttime,jdbcType=TIMESTAMP},
      collectdistime = #{collectdistime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findmyselfcollcet" parameterType="java.lang.Integer" resultMap="CollResultMap">
    SELECT c.id,c.collecttime,c.student_id,c.position_id,p.`name` as posttionnames,p.salary,p.tags,e.avatar,e.`name` as employname,e.stage,i.`name` as industryname
    FROM collect c
        INNER JOIN position p on c.position_id=p.id
        INNER JOIN employ e on p.employ_id = e.id
        INNER JOIN industry i on e.industry_id=i.id
    where c.student_id = #{studentId,jdbcType=INTEGER}
  </select>
</mapper>